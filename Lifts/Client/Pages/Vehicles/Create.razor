@page "/Vehicles/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
<h3>Create Create New Vehicles</h3>
<hr />
<br />
<EditForm Model="@vehicle" OnValidSubmit="@CreateVehicle">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Plate: </label>
        <div>
            <InputText @bind-Value="@vehicle.Plate" class="form-control" />
            <ValidationMessage For="@(() => vehicle.Plate)" />
        </div>
    </div>

    <div class="form-group">
        <label>Type: </label>
        <div>
            <InputSelect @bind-Value="@vehicle.TypeID" class="form-control">
                <option value="">-- Select --</option>
                @if (Types != null)
                {
                    foreach (var type in Types)
                    {
                        <option value="@type.Id">@type.TypeName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => vehicle.TypeID)" />
        </div>
    </div>

    <div class="form-group">
        <label>Seater: </label>
        <div>
            <InputSelect @bind-Value="@vehicle.SeaterID" class="form-control">
                <option value="">-- Select --</option>
                @if (Seaters != null)
                {
                    foreach (var seater in Seaters)
                    {
                        <option value="@seater.Id">@seater.SeaterNumber</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => vehicle.SeaterID)" />
        </div>
    </div>

    <div class="form-group">
        <label>Brand: </label>
        <div>
            <InputSelect @bind-Value="@vehicle.BrandID" class="form-control">
                <option value="">-- Select --</option>
                @if (Brands != null)
                {
                    foreach (var brand in Brands)
                    {
                        <option value="@brand.Id">@brand.BrandName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => vehicle.BrandID)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Create Vehicle  
    </button>

</EditForm>

@code {
    Vehicle vehicle = new Vehicle();
    private List<VehicleType> Types;
    private List<VehicleSeater> Seaters;
    private List<VehicleBrand> Brands;

    protected async override Task OnInitializedAsync()
    {
        Types = await _client.GetFromJsonAsync<List<VehicleType>>($"{Endpoints.VehicleTypesEndpoint}");
        Seaters = await _client.GetFromJsonAsync<List<VehicleSeater>>($"{Endpoints.VehicleSeatersEndpoint}");
        Brands = await _client.GetFromJsonAsync<List<VehicleBrand>>($"{Endpoints.VehicleBrandsEndpoint}");
    }

    private async Task CreateVehicle()
    {
        
        await _client.PostAsJsonAsync(Endpoints.VehiclesEndpoint, vehicle);
        _navManager.NavigateTo("/Vehicle/");
    }
}