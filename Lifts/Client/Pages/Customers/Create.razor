@page "/Customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@customer.CustomerName" class="form-control" />
            <ValidationMessage For="@(() => customer.CustomerName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Username: </label>
        <div>
            <InputText @bind-Value="@customer.CustomerUsername" class="form-control" />
            <ValidationMessage For="@(() => customer.CustomerUsername)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password: </label>
        <div>
            <InputText @bind-Value="@customer.CustomerPassword" class="form-control" />
            <ValidationMessage For="@(() => customer.CustomerPassword)" />
        </div>
    </div>
    <div class="form-group">
        <label>Contact Number: </label>
        <div>
            <InputNumber @bind-Value="@customer.CustomerContactNumber" class="form-control" />
            <ValidationMessage For="@(() => customer.CustomerContactNumber)" />
        </div>
    </div>
    <div class="form-group">
        <label>License: </label>
        <div>
            <InputText @bind-Value="@customer.CustomerLicense" class="form-control" />
            <ValidationMessage For="@(() => customer.CustomerLicense)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email Address: </label>
        <div>
            <InputText @bind-Value="@customer.CustomerEmail" class="form-control" />
            <ValidationMessage For="@(() => customer.CustomerEmail)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Customer
    </button>
</EditForm>

@code { Customer customer = new Customer();

            private async Task CreateCustomer()
            {
                await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
                _navManager.NavigateTo("/customer/");
            } }